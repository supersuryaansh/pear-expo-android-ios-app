apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

group = 'to.holepunch.hellopear'
version = '0.1.0'

buildscript {
  def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
  if (expoModulesCorePlugin.exists()) {
    apply from: expoModulesCorePlugin
    applyKotlinExpoModulesCorePlugin()
  }

  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  // Ensures backward compatibility
  ext.getKotlinVersion = {
    if (ext.has("kotlinVersion")) {
      ext.kotlinVersion()
    } else {
      ext.safeExtGet("kotlinVersion", "1.8.10")
    }
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${getKotlinVersion()}")
  }
}

afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {
        from components.release
      }
    }
    repositories {
      maven {
        url = mavenLocal().url
      }
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 33)

  def agpVersion = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION
  if (agpVersion.tokenize('.')[0].toInteger() < 8) {
    compileOptions {
      sourceCompatibility JavaVersion.VERSION_11
      targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
      jvmTarget = JavaVersion.VERSION_11.majorVersion
    }
  }

  namespace "to.holepunch.hellopear"

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 24)
    targetSdkVersion safeExtGet("targetSdkVersion", 34)
    versionCode 1
    versionName "0.1.0"

    externalNativeBuild {
      cmake {
        arguments "-DANDROID_STL=c++_shared",
                "-DRN_SRC=$rootDir/../node_modules/react-native",
                "-DHB_LIBS=$rootDir/../bare-libs/android",
                "-DHB_SRC=$rootDir/../bare"
        cppFlags "-std=c++20"
      }
    }

    buildFeatures {
      prefab true
    }
  }

  lintOptions {
    abortOnError false
  }

  externalNativeBuild {
    cmake {
      path "src/main/jni/CMakeLists.txt"
    }
  }

  packagingOptions {
    exclude "**/libc++_shared.so"
    exclude "**/libfbjni.so"
    exclude "**/libjsi.so"
    exclude "**/libreact_nativemodule_core.so"
    exclude "**/libturbomodulejsijni.so"
  }

  publishing {
    singleVariant("release") {
      withSourcesJar()
    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation project(':expo-modules-core')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${getKotlinVersion()}"

  implementation "com.facebook.react:react-android"
}
